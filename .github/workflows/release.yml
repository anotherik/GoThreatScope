name: Release GoThreatScope

on:
  push:
    tags: ['v*']
  release:
    types: [published]
  workflow_dispatch: {}

# lock permissions down (grant only what's needed)
permissions:
  contents: write
  actions: read

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # (optional) network hardening; comment out if you don't want it
      # - name: Harden Runner
      #   uses: step-security/harden-runner@<commit-sha> # e.g., v2
      #   with:
      #     egress-policy: audit   # or 'block' once you're confident

      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6
        with:
          go-version: '1.23.6'
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6
        with:
          distribution: goreleaser
          version: '~> v2'   # GoReleaser major version
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
